{"version":3,"file":"static/js/99.f9ce9459.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/DetailsScreen/DetailsScreen.styled.js","pages/DetailsScreen/DetailsScreen.jsx","service/API.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const WrapLoader = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import { ColorRing } from 'react-loader-spinner';\nimport { WrapLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <WrapLoader>\n      <ColorRing\n        visible={true}\n        height=\"150\"\n        width=\"150\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </WrapLoader>\n  );\n};\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const MovieDetailsStyled = styled.div``;\r\n\r\nexport const AdditionalStyled = styled.ul`\r\n  padding: ${p => p.theme.space[2]}px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: ${p => p.theme.space[4]}px;\r\n`;\r\n\r\nexport const LinkStyled = styled(Link)`\r\n  display: block;\r\n\r\n  width: ${p => p.theme.space[7]}px;\r\n\r\n  padding: ${p => p.theme.space[3]}px;\r\n  margin-bottom: 10px;\r\n  background-color: ${p => p.theme.colors.red};\r\n  color: ${p => p.theme.colors.white};\r\n  text-align: center;\r\n  font-size: 16px;\r\n\r\n  border-radius: 8px;\r\n  font-family: 'Roboto-Bold';\r\n  :hover:not(.active) {\r\n    color: ${p => p.theme.colors.red};\r\n    background-color: ${p => p.theme.colors.white};\r\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 250px;\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    margin: auto;\r\n  }\r\n`;\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  gap: 30px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    margin-top: 50px;\r\n    flex-direction: column;\r\n  }\r\n`;\r\nexport const ImgWrap = styled.div`\r\n  display: flex;\r\n  justify-content: start;\r\n  gap: ${p => p.theme.space[4]}px;\r\n\r\n  padding: ${p => p.theme.space[2]}px;\r\n  img {\r\n    height: 50vw;\r\n    border-radius: 8px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport const TextWrap = styled.div`\r\n  font-family: 'Roboto-Regular';\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  display: block;\r\n\r\n  font-size: 24px;\r\n  font-family: 'Roboto-Bold';\r\n  margin-bottom: 10px;\r\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\r\n\r\n  @media screen and (max-width: 768px) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-bottom: ${p => p.theme.space[4]}px;\r\n  width: 200px;\r\n\r\n  overflow: hidden;\r\n  font-size: 12px;\r\n`;\r\nexport const UserText = styled.p`\r\n  margin-bottom: 5px;\r\n`;\r\nexport const GenresText = styled.p`\r\n  margin-bottom: 5px;\r\n`;\r\nexport const StatusText = styled.p`\r\n  margin-bottom: 5px;\r\n`;\r\nexport const ScheduleText = styled.p`\r\n  margin-bottom: 5px;\r\n`;\r\nexport const LinkText = styled.p``;\r\nexport const SummaryText = styled.p`\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const LinkUrl = styled.a`\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  font-family: 'Roboto-Bold';\r\n  letter-spacing: 0.06em;\r\n  padding: 5px 20px;\r\n  margin-left: 10px;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  color: blue;\r\n  border-radius: 8px;\r\n  background-color: ${p => p.theme.colors.lightred};\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  :hover:not(.active) {\r\n    color: ${p => p.theme.colors.red};\r\n    background-color: rgb(23 116 141 / 28%);\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    padding: 3px 10px;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n","import { useState, useEffect, Suspense } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nimport { getMovieDetails } from 'service/API';\r\nimport {\r\n  MovieDetailsStyled,\r\n  LinkStyled,\r\n  Wrap,\r\n  Title,\r\n  TextWrap,\r\n  ImgWrap,\r\n  SummaryText,\r\n  LinkUrl,\r\n  UserText,\r\n  GenresText,\r\n  StatusText,\r\n  ScheduleText,\r\n  LinkText,\r\n} from './DetailsScreen.styled';\r\nimport { Container, ErrorMessage } from 'pages/ListScreen/ListScreen.styled';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport img from '../../assets/else.jpg';\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [isLoading, setIsLoading] = useState('false');\r\n  const [error, setError] = useState(null);\r\n\r\n  const location = useLocation();\r\n  const backLinkHref = location.state?.from ?? '/';\r\n\r\n  useEffect(() => {\r\n    async function fetchMovie() {\r\n      setIsLoading('true');\r\n      try {\r\n        await getMovieDetails(movieId).then(response => {\r\n          setMovie(response);\r\n          setIsLoading('false');\r\n        });\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    }\r\n    fetchMovie();\r\n  }, [movieId]);\r\n\r\n  if (!movie) {\r\n    return null;\r\n  }\r\n\r\n  const {\r\n    url,\r\n    image,\r\n    name,\r\n    summary,\r\n    type,\r\n    status,\r\n    rating,\r\n    schedule: { days, time },\r\n  } = movie;\r\n  const show = summary.replace(/<\\/?[^>]+(>|$)/g, '');\r\n  return (\r\n    <section>\r\n      <Container>\r\n        {error !== null && <ErrorMessage>{error.message}</ErrorMessage>}\r\n        {isLoading === 'true' && <Loader />}\r\n        <MovieDetailsStyled>\r\n          <LinkStyled to={backLinkHref}>Go back</LinkStyled>\r\n          <Wrap>\r\n            <ImgWrap>\r\n              <img src={!image ? img : image.original} alt={name} />\r\n            </ImgWrap>\r\n            <TextWrap>\r\n              <Title>{name}</Title>\r\n              <UserText>\r\n                <b>User score:</b> {rating.average ?? 'is not available yet...'}\r\n              </UserText>\r\n              <GenresText>\r\n                <b>Genres:</b> {type}\r\n              </GenresText>\r\n              <StatusText>\r\n                <b>Status:</b> {status}\r\n              </StatusText>\r\n              <ScheduleText>\r\n                <b>Series schedule:</b>{' '}\r\n                {days.length === 1\r\n                  ? `${days} ${time}`\r\n                  : `${days.join(', ')} ${time}`}\r\n              </ScheduleText>\r\n              <LinkText>\r\n                <b>Link to the series:</b>{' '}\r\n                <LinkUrl href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  Link\r\n                </LinkUrl>\r\n              </LinkText>\r\n\r\n              <SummaryText>\r\n                <b>Summary:</b>\r\n              </SummaryText>\r\n              {show}\r\n            </TextWrap>\r\n          </Wrap>\r\n          <Suspense fallback={null}>\r\n            <Outlet />\r\n          </Suspense>\r\n        </MovieDetailsStyled>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import axios from 'axios';\r\n// API  - https://api.tvmaze.com/search/shows?q=[PLACE_STRING_FROM_SEARCH_HERE]\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'https://api.tvmaze.com/',\r\n  headers: { 'Content-Type': 'application/json' },\r\n});\r\n\r\nexport const searchMovies = async value => {\r\n  const response = await axiosInstance.get(`search/shows?q=${value}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getMovieDetails = async movieId => {\r\n  const response = await axiosInstance.get(`shows/${movieId}`);\r\n  return response.data;\r\n};\r\n"],"names":["WrapLoader","styled","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","MovieDetailsStyled","LinkStyled","p","theme","space","Link","red","white","Wrap","ImgWrap","TextWrap","Title","UserText","GenresText","StatusText","ScheduleText","LinkText","SummaryText","LinkUrl","lightred","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","error","setError","backLinkHref","useLocation","state","from","useEffect","getMovieDetails","then","response","fetchMovie","url","image","name","summary","type","status","rating","schedule","days","time","show","replace","message","to","src","original","img","alt","average","length","join","href","target","rel","Suspense","fallback","axiosInstance","axios","baseURL","headers","searchMovies","value","get","data"],"sourceRoot":""}